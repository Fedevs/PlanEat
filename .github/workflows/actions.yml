name: PlanEat ci/cd
on: [push]
jobs:
  migrations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Go to github.workspace
        run: cd ${{ github.workspace }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations dry run
        run: |
          python ./manage.py makemigrations --dry-run

  linter:
    runs-on: ubuntu-latest
    needs: migrations
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Go to github.workspace
        run: cd ${{ github.workspace }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Analyzing the code with flake8 and blue
        run: |
          flake8 .
          blue --check --diff .

  test:
    runs-on: ubuntu-latest
    needs: migrations
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Go to github.workspace
        run: cd ${{ github.workspace }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests
        run: |
          pytest -p no:warnings --cov-config=tox.ini --no-cov-on-fail --cov-report term-missing --cov-report html --cov=. --cov-branch -n auto .
      - name: Save .coverage
        uses: actions/upload-artifact@v2
        with:
          name: .coverage
          path: ${{ github.workspace }}/.coverage
      - name: Save coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage report
          path: ${{ github.workspace }}/htmlcov

  der:
    runs-on: ubuntu-latest
    needs: migrations
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Go to github.workspace
        run: cd ${{ github.workspace }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz graphviz-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pygraphviz pydotplus
      - name: Create der.png
        run: |
          ./manage.py graph_models --arrow-shape normal --all-applications --group-models --language es --disable-abstract-fields --output der.png
      - name: Save der.png
        uses: actions/upload-artifact@v2
        with:
          name: der.png
          path: ${{ github.workspace }}/der.png
